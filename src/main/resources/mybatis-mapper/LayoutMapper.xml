<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.purple.demo.mapper.LayoutMapper">

<!-- RightLayout only //////////////////////////// -->
    <!-- 친구 추가 -->
    <insert id="addNewFriend">
        INSERT INTO friend 
        (user_pk, friend_pk)
        VALUES 
        (#{user_pk}, #{friend_pk})
    </insert>

    <!-- 이미 친구인지 확인 -->
    <select id="friendCheck" resultType="FriendDTO">
        SELECT user_pk, friend_pk from friend 
        WHERE user_pk = #{user_pk}
    </select>

    <!-- 알 수도 있는 사람 목록 가져오기 -->
    <select id="getRecommandFriendList" resultType="FriendDTO">
        SELECT DISTINCT B.friend_pk, C.user_id, C.user_profileimg
        FROM friend AS A
        INNER JOIN friend AS B
        JOIN user C
        ON A.friend_pk = B.user_pk
        AND B.friend_pk = C.user_pk
        AND b.friend_pk 
        NOT IN
        (
            SELECT friend_pk 
            FROM friend 
            WHERE user_pk = #{user_pk}
        )
        AND b.friend_pk 
        NOT IN (#{user_pk})
        ORDER BY RAND()
        LIMIT 20
    </select>

    <!-- 친구가 없는 사용자에게 랜덤으로 목록을 출력합니다 -->
    <select id="getRandomRecommandFriendList" resultType="FriendDTO">
        SELECT user_pk AS friend_pk, user_id, user_profileimg
        FROM user
        WHERE user_pk != (#{user_pk}) 
        AND user_pk NOT IN (
            SELECT friend_pk 
            FROM friend 
            WHERE user_pk = #{user_pk}
            )
        ORDER BY RAND()
        LIMIT 20
    </select>

    <!-- 친구목록 가져오기 -->
    <select id="getFriendList" resultType="userEntity">
        SELECT A.user_id, A.user_bio, A.user_profileImg, B.friend_pk as "user_pk"
        FROM user AS A
        JOIN friend AS B
        ON (A.user_pk = B.friend_pk)
        WHERE B.user_pk = #{user_pk}
    </select>

    <!-- 친구 삭제 -->
    <delete id="delFriend">
        DELETE FROM friend
        WHERE friend_pk = #{friend_pk}
        AND user_pk = #{user_pk}
    </delete>

    <!-- 채팅방 생성과 채팅방 정보 가져오기 -->
    <select id="getRoom" resultType="String">
        SELECT chatroom_id
        FROM chatroom
        WHERE chatroom_userpk = #{chatroom_userpk}
        AND chatroom_friendpk = #{chatroom_friendpk}
    </select>

    <insert id="createRoom">
        INSERT INTO chatroom
        (chatroom_id, chatroom_userpk, chatroom_friendpk)
        VALUES
        (#{chatroom_id}, #{chatroom_userpk}, #{chatroom_friendpk})
    </insert>

    <!-- 대화목록 -->
    <select id="getChatList" resultType="ChatRoomDTO">
        SELECT A.chatroom_id, A.chatroom_friendpk, B.user_id, B.user_profileimg, C.message_ctnt as "last_message", C.message_date as "last_messagedate"
        FROM chatroom AS A
        LEFT JOIN user AS B
        ON A.chatroom_friendpk = B.user_pk
        LEFT JOIN (SELECT    original.message_chatroomid, original.message_ctnt, original.message_date
			FROM      message original
			LEFT JOIN message compare
			ON        original.message_chatroomid = compare.message_chatroomid
			AND       original.message_date <![CDATA[<]]>  compare.message_date
			WHERE     compare.message_chatroomid IS NULL) AS C
        ON A.chatroom_id = C.message_chatroomid
        WHERE A.chatroom_userpk =  #{chatroom_userpk};  
    </select>
   
    <select id="enterChatroom" resultType="MessageDTO">
        SELECT A.message_chatroomid, A.message_ctnt, A.message_date,
        A.message_sendto, A.message_from, A.message_readstate, B.user_id,
        B.user_profileimg
        FROM message AS A
        LEFT JOIN user AS B
        ON A.message_from = B.user_pk
        WHERE A.message_chatroomid= #{room_id}
        AND A.message_state = 1
        ORDER BY A.message_date DESC
        LIMIT 0,40;
    </select>

    <select id="getNoReadAllMessage" resultType="int">
        SELECT COUNT(message_pk)
        FROM message
        WHERE message_sendto = #{send_to}
        AND message_readstate = 1
    </select>

    <update id="readMessage">
        UPDATE message
		SET message_readstate = #{message_readstate}
		WHERE message_chatroomid = #{message_chatroomid}
        AND message_sendto = #{message_sendto}
    </update>
</mapper>