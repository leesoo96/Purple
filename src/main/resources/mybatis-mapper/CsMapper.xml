<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.purple.demo.mapper.CsMapper">

	<!-- 공지사항 글 등록 -->
	<insert id="regNotice" useGeneratedKeys="true" keyProperty="notice_pk">
		INSERT INTO notice
		( notice_title, notice_ctnt, notice_userpk )
		VALUES
		( #{notice_title}, #{notice_ctnt}, #{notice_userpk} )
	</insert>

	<!-- 공지사항 글 리스트 -->
	<select id="selNoticeList"  resultType="NoticeEntity">
		SELECT * FROM notice
		ORDER BY notice_pk DESC
		LIMIT #{sIdx}, #{recordCntPerPage};
	</select>

	<!-- 공지사항 글 -->
	<select id="selNotice" resultType="NoticeEntity">
		SELECT * FROM notice
		WHERE notice_pk = #{notice_pk};
	</select>

	<!-- 공지사항 글의 갯수 -->
	<select id="selNoticeMaxPage"  resultType="_int">
		SELECT CEIL(COUNT(notice_pk) / #{recordCntPerPage})as notice_count FROM notice;
	</select>

	<!-- 공지사항 글 수정 -->
	<update id="notice_upd">
		UPDATE notice
		SET notice_title = #{notice_title}
		,notice_ctnt = #{notice_ctnt}
		WHERE notice_pk = #{notice_pk}
	</update>

	<!-- 공지사항 이미지 -->
	<update id="notice_img_upd">
		UPDATE notice
		SET notice_img = #{notice_img}
		WHERE notice_pk = #{notice_pk}
	</update>

	<!-- 공지사항 조회수 -->
	<update id="updNoticevieView">
		UPDATE notice
		SET notice_view = notice_view + 1
		WHERE notice_pk = #{notice_pk}
		<selectKey keyProperty="notice_view" resultType="int" order="AFTER">
		SELECT notice_view
		FROM notice 
		WHERE notice_pk = #{notice_pk}
		</selectKey>
	</update>

	<!-- 공지사항 글 삭제 -->
	<delete id="notice_del">
		DELETE FROM notice
		WHERE notice_pk = #{notice_pk}
	</delete>





	<!-- 문의사항 글 등록-->
	<insert id="regQuestion" useGeneratedKeys="true" keyProperty="question_pk">
		INSERT INTO question
		( question_title, question_ctnt,
		question_userpk, question_type )
		VALUES
		( #{question_title}, #{question_ctnt}, 
		#{question_userpk}, #{question_type} )
	</insert>
	
	<!--문의사항 댓글 등록-->
	<insert id="question_cmt_reg">
		INSERT INTO answer
		( answer_pk, answer_userpk, answer_ctnt)
		VALUES
		( #{answer_pk}, #{answer_userpk}, #{answer_ctnt} )
	</insert>

	<!-- 문의사항 글 리스트 -->
	<select id="selQuestionList" resultType="QuestionEntity">
		SELECT a.question_pk
		,a.question_title, a.question_ctnt,
		a.question_writedate,
		a.question_view, a.question_userpk,
		a.question_type , a.question_img, b.answer_ctnt, b.answer_writedate,
		b.answer_pk
		FROM
		question AS a LEFT JOIN answer AS b
		on a.question_pk = b.answer_pk
		<if test='user_auth.equals("ROLE_USER")'>
		WHERE a.question_userpk = #{question_userpk}
		</if>
		ORDER BY a.question_pk DESC
		LIMIT #{sIdx}, #{recordCntPerPage};
	</select>

	<!-- 문의사항 글 -->
	<select id="selQuestion" resultType="QuestionEntity">
		SELECT * FROM question
		WHERE question_pk = #{question_pk};
	</select>

	<!-- 문의사항 글의 갯수 -->
	<select id="selQuestionMaxPage"  resultType="_int">
		SELECT CEIL(COUNT(question_pk) / #{recordCntPerPage})as question_count FROM question;
	</select>
	
	<!-- 문의사항 글 수정 -->
	<update id="question_upd">
		UPDATE question
		SET question_title = #{question_title} 
		,question_ctnt = #{question_ctnt}
		,question_type = #{question_type}
		WHERE question_pk = #{question_pk}
	</update>

	<!-- 문의사항 이미지 수정 -->
	<update id="question_img_upd">
		UPDATE question
		SET question_img = #{question_img}
		WHERE question_pk = #{question_pk}
	</update>

	<!-- 문의사항 조회수 -->
	<update id="updQuestionView">
		UPDATE question
		SET question_view = question_view + 1
		WHERE question_pk = #{question_pk}
		<selectKey keyProperty="question_view" resultType="int" order="AFTER">
		SELECT question_view
		FROM question 
		WHERE question_pk = #{question_pk}
		</selectKey>
	</update>

	<!-- 문의사항 글 삭제 -->
	<delete id="question_del">
		DELETE FROM question
		WHERE question_pk = #{question_pk}
	</delete>

	<!-- 문의사항 댓글 삭제-->
	<delete id="answer_del">
		DELETE FROM answer
		WHERE answer_pk = #{answer_pk}
	</delete>

</mapper>