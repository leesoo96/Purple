<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.purple.demo.mapper.FriendMapper">
    
    <!-- 이미 친구인지 확인 -->
    <select id="friendCheck" resultType="FriendDTO">
        SELECT user_pk, friend_pk 
        FROM friend 
        WHERE user_pk = #{user_pk}
    </select>

    <!-- 알 수도 있는 사람 목록 가져오기 -->
    <select id="getRecommandFriendList" resultType="FriendDTO">
        SELECT DISTINCT B.friend_pk, C.user_id, C.user_profileimg
        FROM friend AS A
        INNER JOIN friend AS B
        JOIN user C
        ON A.friend_pk = B.user_pk
        AND B.friend_pk = C.user_pk
        AND b.friend_pk 
        NOT IN
        (
            SELECT friend_pk 
            FROM friend 
            WHERE user_pk = #{user_pk}
        )
        AND b.friend_pk 
        NOT IN (#{user_pk})
        ORDER BY RAND()
        LIMIT 20
    </select>

    <!-- 친구가 없는 사용자에게 랜덤으로 목록을 출력합니다 -->
    <select id="getRandomRecommandFriendList" resultType="FriendDTO">
        SELECT user_pk AS friend_pk, user_id, user_profileimg
        FROM user
        WHERE user_pk != (#{user_pk}) 
        AND user_pk NOT IN (
            SELECT friend_pk 
            FROM friend 
            WHERE user_pk = #{user_pk}
            )
        ORDER BY RAND()
        LIMIT 20
    </select>

    <!-- 친구목록 가져오기 -->
    <select id="getFriendList" resultType="userEntity">
        SELECT A.user_id, A.user_bio, A.user_profileImg, B.friend_pk AS "user_pk"
        FROM user AS A
        JOIN friend AS B
        ON (A.user_pk = B.friend_pk)
        WHERE B.user_pk = #{user_pk}
    </select>

    <!-- 친구 추가 -->
    <insert id="addNewFriend">
        INSERT INTO friend 
        (user_pk, friend_pk)
        VALUES 
        (#{user_pk}, #{friend_pk})
    </insert>

    <!-- 친구 삭제 -->
    <delete id="delFriend">
        DELETE FROM friend
        WHERE friend_pk = #{friend_pk}
        AND user_pk = #{user_pk}
    </delete>
</mapper>